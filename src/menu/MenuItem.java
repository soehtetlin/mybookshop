package menu;

import java.awt.Dimension;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.Icon;
import javax.swing.JPanel;
import java.awt.Color;
import java.awt.SystemColor;
import java.awt.Font;
import javax.swing.SwingConstants;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;

public class MenuItem extends JPanel {

	public void setShowing(boolean showing) {
		this.showing = showing;
	}

	public ArrayList<MenuItem> getSubMenu() {
		return subMenu;
	}

	/**
	 * Creates new form MenuItem
	 */
	private final ArrayList<MenuItem> subMenu = new ArrayList<>();
	private ActionListener act;

	public MenuItem(Icon icon, String menuName, ActionListener act, MenuItem... subMenu) {
		setFont(new Font("Tahoma", Font.BOLD, 16));
		setForeground(SystemColor.window);
		initComponents();
		lbIcon.setIcon(icon);
		lbName.setText(menuName);
		if (act != null) {
			this.act = act;
		}
		this.setSize(new Dimension(160, 50));
		this.setMaximumSize(new Dimension(Integer.MAX_VALUE, 60));
		this.setMinimumSize(new Dimension(Integer.MAX_VALUE, 45));
		setLayout(null);
		add(lbIcon);
		add(lbName);
		for (int i = 0; i < subMenu.length; i++) {
			this.subMenu.add(subMenu[i]);
			subMenu[i].setVisible(false);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

//        jSeparator1 = new javax.swing.JSeparator();
//        jSeparator1.setForeground(new Color(128, 0, 128));
		lbIcon = new javax.swing.JLabel();
		lbIcon.setHorizontalAlignment(SwingConstants.RIGHT);
		lbIcon.setBounds(0, 0, 45, 50);
		lbIcon.setForeground(SystemColor.window);
		lbName = new javax.swing.JLabel();
		lbName.setHorizontalAlignment(SwingConstants.LEFT);
		lbName.setBounds(52, 0, 108, 50);
		lbName.setFont(new Font("Tahoma", Font.BOLD, 14));
		lbName.setForeground(SystemColor.window);

		setBackground(new Color(153, 51, 204));
		addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				formMousePressed(evt);
			}
		});

		lbName.setText("Menu Name Here ...");
	}// </editor-fold>//GEN-END:initComponents

	private boolean showing = false;

	private void formMousePressed(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_formMousePressed
		if (showing) {
			hideMenu();
		} else {
			showMenu();
		}
		if (act != null) {
			act.actionPerformed(null);
		}
	}// GEN-LAST:event_formMousePressed

	private void showMenu() {
		new Thread(new Runnable() {
			@Override
			public void run() {
				for (int i = 0; i < subMenu.size(); i++) {
					sleep();
					subMenu.get(i).setVisible(true);
				}
				showing = true;
				getParent().repaint();
				getParent().revalidate();
			}
		}).start();
	}

	private void hideMenu() {
		new Thread(new Runnable() {
			@Override
			public void run() {
				for (int i = subMenu.size() - 1; i >= 0; i--) {
					sleep();
					subMenu.get(i).setVisible(false);
					subMenu.get(i).hideMenu();
				}
				getParent().repaint();
				getParent().revalidate();
				showing = false;
			}
		}).start();
	}

	private void sleep() {
		try {
			Thread.sleep(20);
		} catch (Exception e) {
		}
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel lbIcon;
	private javax.swing.JLabel lbName;
	// End of variables declaration//GEN-END:variables
}
